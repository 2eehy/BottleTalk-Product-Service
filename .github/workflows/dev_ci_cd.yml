name: Deploy to AWS EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setting .env
        run: |
          echo "MYSQL_DATABASE=${{secrets.MYSQL_DATABASE}}" >> .env
          echo "MYSQL_USER=${{secrets.MYSQL_USER}}" >> .env
          echo "MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}" >> .env
          echo "OPENSEARCH_HOST=${{secrets.OPENSEARCH_HOST}}" >> .env
          echo "OPENSEARCH_USER=${{secrets.OPENSEARCH_USER}}" >> .env
          echo "OPENSEARCH_PASS=${{secrets.OPENSEARCH_PASS}}" >> .env
          cat .env

#      - name: Log in to Docker Hub
#        run: |
#          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

#      - name: Build, tag, and push Docker image to Docker Hub
#        env:
#          IMAGE_NAME: lundaljung/bt-project-service
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $IMAGE_NAME:$IMAGE_TAG .
#          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create app path
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.SSH_HOST }} 'mkdir -p ~/app'

      - name: Copy files to EC2
        run: |
          scp -r -o StrictHostKeyChecking=no * ec2-user@${{ secrets.SSH_HOST }}:~/app

      - name: Execute docker-compose up
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.SSH_HOST }} "cd ~/app && sudo docker-compose down && sudo docker-compose up -d"